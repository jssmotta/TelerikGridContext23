{"version":3,"file":"kendo.upload.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoupload","js","this","$","undefined$1","kendo","window","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","HOVER_STATE","FOCUS_STATE","PROGRESSBAR_CLASS","PROGRESSBAR_SELECTOR","TABINDEX","headerStatusIconName","Upload","extend","init","element","options","that","progressbars","fn","call","name","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onUploadButtonKeydown","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","forEach","progressbar","fileEntry","onPause","pauseIcon","find","htmlEncode","icon","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","addClass","removeClass","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","onSelect","last","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_createProgressbarWapper","_createFileIconWrapper","fileTypeIcon","iconClass","_progressbarInit","kendoProgressBar","animation","showStatus","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","isError","invalidClass","fileDetails","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","isProgressbar","fileUid","fileList","progressbarSelector","appendTo","angular","elements","value","_removeFileEntry","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","iconsNameDictionary","actionKeyText","hasOwnProperty","_clearFileAction","firstActionIcon$1","append","firstActionIcon","_renderAction","_fileState","stateKey","currentState","uploading","text","uploaded","failed","iconName","actionText","empty","button","_onFileProgress","percentComplete","progressBar","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","_showActionButtons","actionsWrapper","uploadButton","clearButton","html","renderButton","themeColor","_showHeaderUploadStatus","isUploading","headerUploadStatus","headerUploadStatusIcon","currentlyUploading","not","currentlyFailed","currentlyPaused","onAbort","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","test","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","jQuery","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","success","error","xhrFields","hasLabel","selectText","wrap","prependTo","tabindex","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","fileValidation","cleanupFrame","unregisterFrame","body","dataInput","one","onIframeLoad","submit","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","id","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","slashIndex","lastIndexOf","substr","getFileExtension","rawFiles","fileName","rawFile","matches","match","unique","validationInfo","extensions","ext","substring","parseAllowedExtensions","validateFileExtension","validateFileSize","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin"],"sources":["kendo.upload.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.progressbar.js'), require('kendo.icons.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.progressbar', 'kendo.icons', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoupload = global.kendoupload || {}, global.kendoupload.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"upload\",\n        name: \"Upload\",\n        category: \"web\",\n        description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n        depends: [\"core\", \"progressbar\", \"icons\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            antiForgeryTokens = kendo.antiForgeryTokens,\n            logToConsole = kendo.logToConsole,\n            rFileExtension = /\\.([^\\.]+)$/,\n            NS = \".kendoUpload\",\n            SELECT = \"select\",\n            UPLOAD = \"upload\",\n            SUCCESS = \"success\",\n            ERROR = \"error\",\n            COMPLETE = \"complete\",\n            CANCEL = \"cancel\",\n            CLEAR = \"clear\",\n            PAUSE = \"pause\",\n            RESUME = \"resume\",\n            PROGRESS = \"progress\",\n            REMOVE = \"remove\",\n            VALIDATIONERRORS = \"validationErrors\",\n            INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n            INVALIDMINFILESIZE = \"invalidMinFileSize\",\n            INVALIDFILEEXTENSION = \"invalidFileExtension\",\n            PROGRESSHIDEDELAY = 1000,\n            PROGRESSHIDEDURATION = 2000,\n            HOVER_STATE = \"k-hover\",\n            FOCUS_STATE = \"k-focus\",\n            PROGRESSBAR_CLASS = \"k-progressbar\",\n            PROGRESSBAR_SELECTOR = \".\" + PROGRESSBAR_CLASS,\n            PROGRESSBAR_TEMPLATE_SELECTOR = \".k-progress\",\n            TABINDEX = \"tabindex\",\n            WARNINGICON_SELECTOR = \".k-i-exclamation-circle,.k-svg-i-exclamation-circle\";\n\n        var headerStatusIconName = {\n            loading: \"upload\",\n            warning: \"exclamation-circle\",\n            success: \"check\"\n        };\n\n        var Upload = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                that.progressbars = [];\n\n                Widget.fn.init.call(that, element, options);\n\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                that.localization = that.options.localization;\n\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest(\".k-upload\");\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n\n                var ns = that._ns = NS + \"-\" + kendo.guid();\n                activeInput.closest(\"form\")\n                    .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                    .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n                that._initUploadModule();\n\n                that._toggleDropZone();\n\n                that.wrapper\n                    .on(\"keydown\", \".k-upload-button\", that._onUploadButtonKeydown.bind(that))\n                    .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                    .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                    .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                    .on(\"keydown\", that._onKeyDown.bind(that))\n                    .on(\"focusout\", that._focusout.bind(that));\n\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE,\n                PAUSE,\n                RESUME\n            ],\n\n            options: {\n                name: \"Upload\",\n                enabled: true,\n                multiple: true,\n                directory: false,\n                showFileList: true,\n                template: \"\",\n                files: [],\n                async: {\n                    autoRetryAfter: 0,\n                    bufferChunkSize: 10000000,\n                    maxAutoRetries: 1,\n                    removeVerb: \"POST\",\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: \"*/*; q=0.5, application/json\",\n                    useArrayBuffer: false\n                },\n                localization: {\n                    \"select\": \"Select files...\",\n                    \"cancel\": \"Cancel\",\n                    \"retry\": \"Retry\",\n                    \"remove\": \"Remove\",\n                    \"pause\": \"Pause\",\n                    \"resume\": \"Resume\",\n                    \"clearSelectedFiles\": \"Clear\",\n                    \"uploadSelectedFiles\": \"Upload\",\n                    \"dropFilesHere\": \"Drop files here to upload\",\n                    \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                    \"statusUploading\": \"uploading\",\n                    \"statusUploaded\": \"uploaded\",\n                    \"statusWarning\": \"warning\",\n                    \"statusFailed\": \"failed\",\n                    \"headerStatusUploading\": \"Uploading...\",\n                    \"headerStatusPaused\": \"Paused\",\n                    \"headerStatusUploaded\": \"Done\",\n                    \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                    \"uploadFail\": \"File(s) failed to upload.\",\n                    \"invalidMaxFileSize\": \"File size too large.\",\n                    \"invalidMinFileSize\": \"File size too small.\",\n                    \"invalidFileExtension\": \"File type not allowed.\"\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: \"\"\n            },\n\n            _initUploadModule: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.async.saveUrl) {\n                    that._module = that._supportsFormData() ?\n                    new formDataUploadModule(that) :\n                    new iframeUploadModule(that);\n                    that._async = true;\n\n                    var initialFiles = options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    activeInput = that.element;\n\n                $(that.options.dropZone).off(that._ns);\n\n                Widget.fn.setOptions.call(that, options);\n\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n\n                activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n                if (that.directory) {\n                    activeInput.attr(\"webkitdirectory\", that.directory);\n                    activeInput.attr(\"directory\", that.directory);\n                }\n                that.toggle(that.options.enabled);\n\n                that._initUploadModule();\n\n                that._toggleDropZone();\n            },\n\n            enable: function(enable) {\n                enable = typeof (enable) === \"undefined\" ? true : enable;\n                this.toggle(enable);\n            },\n\n            disable: function() {\n                this.toggle(false);\n            },\n\n            toggle: function(enable) {\n                enable = typeof (enable) === \"undefined\" ? enable : !enable;\n                this.wrapper.toggleClass(\"k-disabled\", enable);\n                this.element.prop(\"disabled\", enable);\n            },\n\n            focus: function() {\n                this.element.trigger(\"focus\");\n            },\n\n            destroy: function() {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n\n                $(document)\n                    .add($(\".k-dropzone\", that.wrapper))\n                    .add(that.wrapper.closest(\"form\"))\n                    .off(that._ns);\n\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n\n                $(that.element).off(NS);\n\n                if (that.progressbars) {\n                    that.progressbars.forEach(function (progressbar) {\n                        progressbar.destroy();\n                    });\n                }\n                Widget.fn.destroy.call(that);\n            },\n            pause: function(fileEntry) {\n                this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n                var pauseIcon = fileEntry.find(\".k-i-pause-sm,.k-svg-i-pause-sm\");\n                var resume = kendo.htmlEncode(this.localization.resume);\n                kendo.ui.icon(pauseIcon, { icon: \"play-sm\" });\n                pauseIcon.attr(\"title\", resume);\n                $(pauseIcon).parent().attr(\"aria-label\", resume);\n            },\n            resume: function(fileEntry) {\n                this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n                var playIcon = fileEntry.find(\".k-i-play-sm,.k-svg-i-play-sm\");\n                var pause = kendo.htmlEncode(this.localization.pause);\n                kendo.ui.icon(playIcon, { icon: \"pause-sm\" });\n                playIcon.attr(\"title\", pause);\n                $(playIcon).parent().attr(\"aria-label\", pause);\n            },\n            upload: function() {\n                var that = this;\n\n                that._module.onSaveSelected();\n            },\n\n            getFiles: function() {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find(\".k-file\");\n\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data(\"fileNames\");\n\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n\n                return allFiles;\n            },\n\n            clearAllFiles: function() {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n\n                files.each(function(index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n\n            removeAllFiles: function() {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n\n                files.each(function(index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n\n            removeFileByUid: function(uid) {\n                this._removeFileByUid(uid, true);\n            },\n\n            clearFileByUid: function(uid) {\n                this._removeFileByUid(uid, false);\n            },\n\n            _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n\n                if (typeof uid !== 'string') { return; }\n\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n\n            clearFile: function(callback) {\n                this._removeFile(callback, false);\n            },\n\n            removeFile: function(callback) {\n                this._removeFile(callback, true);\n            },\n\n            _removeFile: function(callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n                var fileData;\n\n                if (typeof callback === \"function\") {\n                    files.each(function(index, file) {\n                        fileData = $(file).data(\"fileNames\");\n\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n\n            _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = {\n                    target: $(fileEntry, that.wrapper)\n                };\n                var allFiles;\n\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n\n                    allFiles = $(\".k-file\", that.wrapper);\n\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n\n            _addInput: function(sourceInput) {\n                //check if source input is a DOM element. Required for some unit tests\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n\n                var that = this,\n                    input = sourceInput.clone().val(\"\");\n\n                input\n                    .insertAfter(that.element)\n                    .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n                $(that.element)\n                    .hide()\n                    .attr(TABINDEX, \"-1\")\n                    .removeAttr(\"id\")\n                    .off(NS);\n\n                that._activeInput(input);\n                that.element.trigger(\"focus\");\n            },\n\n            _activeInput: function(input) {\n                var that = this,\n                    wrapper = that.wrapper;\n\n                that.element = input;\n\n                if (that.directory) {\n                    input.attr(\"webkitdirectory\", that.directory);\n                    input.attr(\"directory\", that.directory);\n                }\n\n                input\n                    .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                    .attr(\"autocomplete\", \"off\")\n                    .on(\"click\" + NS, function(e) {\n                        if (wrapper.hasClass(\"k-disabled\")) {\n                            e.preventDefault();\n                        }\n                    })\n                    .on(\"focus\" + NS, function() {\n                        $(this).parent().addClass(FOCUS_STATE);\n                    })\n                    .on(\"blur\" + NS, function() {\n                        $(this).parent().removeClass(FOCUS_STATE);\n                    })\n                    .on(\"change\" + NS, that._onInputChange.bind(that));\n            },\n\n            _adjustFocusState: function(focusedItem, toFocus) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n                toFocus.addClass(FOCUS_STATE);\n                toFocus.attr(TABINDEX, 0);\n            },\n\n            _arrowKeyNavigation: function(e, key, focusedItem) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    toFocus;\n\n                if (key === kendoKeys.DOWN) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass(\"k-upload-action\")) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest(\".k-file\");\n                        }\n\n                        toFocus = focusedItem.next();\n                    }\n\n                    that._adjustFocusState(focusedItem, toFocus);\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = that.wrapper.find(\".k-clear-selected\");\n                    }\n                } else if (key === kendoKeys.UP) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass(\"k-upload-action\")) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest(\".k-file\");\n                        }\n\n                        toFocus = focusedItem.prev();\n                    }\n\n                    that._adjustFocusState(focusedItem, toFocus);\n                } else if (key === kendoKeys.RIGHT) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        toFocus = focusedItem.next(\".k-upload-action\");\n\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find(\".k-upload-action:first\");\n                    }\n\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                } else if (key === kendoKeys.LEFT) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        toFocus = focusedItem.prev(\".k-upload-action\");\n\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find(\".k-upload-action:last\");\n                    }\n\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                }\n\n                if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                    toFocus = that.element;\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    that._preventFocusRemove = true;\n                    toFocus.trigger(\"focus\");\n                }\n            },\n\n            _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    fileEntry = $(focusedItem, that.wrapper);\n\n                that._retryClicked = false;\n\n                if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel,.k-svg-i-cancel\").length > 0) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: fileEntry });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                } else if (key === kendoKeys.SPACEBAR) {\n                    if (focusedItem.find(\".k-i-pause-sm,.k-svg-i-pause-sm\").length > 0) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(focusedItem);\n                        that._updateHeaderUploadStatus();\n                    } else if (focusedItem.find(\".k-i-play-sm,.k-svg-i-play-sm\").length > 0) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(focusedItem);\n                    }\n                } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                    if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                        return;\n                    }\n\n                    $(WARNINGICON_SELECTOR, focusedItem).remove();\n                    $(PROGRESSBAR_SELECTOR, focusedItem).finish().show();\n\n                    if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                        that._module.prepareChunk(fileEntry);\n                    }\n\n                    that._module.onRetry({ target: fileEntry });\n                    that._retryClicked = true;\n                }\n            },\n\n            _commandKeyNavigation: function(key, focusedItem) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    files = focusedItem.data(\"fileNames\"),\n                    hasValidationErrors = that._filesContainValidationErrors(files),\n                    eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n\n                if (key === kendoKeys.DELETE) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that._preventFocusRemove = true;\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (key === kendoKeys.TAB) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else if (!!that.options.async.saveUrl) {\n                    that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n                }\n            },\n\n            _focusout: function() {\n                var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n                if (!this._preventFocusRemove) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else {\n                    this._preventFocusRemove = false;\n                }\n            },\n\n            _onKeyDown: function(e) {\n                var that = this,\n                    focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                    kendoKeys = kendo.keys,\n                    commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                    key = e.keyCode;\n\n                if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                    that._arrowKeyNavigation(e, key, focusedItem);\n                } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-disabled\")) {\n                    if (key === kendoKeys.SPACEBAR) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n\n                    that._commandKeyNavigation(key, focusedItem);\n                }\n            },\n\n            _onInputChange: function(e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n\n            _onUploadButtonKeydown: function(e) {\n                var key = e.keyCode,\n                    kendoKeys = kendo.keys;\n\n                if (key === kendoKeys.ENTER || key === kendoKeys.SPACEBAR) {\n                    this.wrapper.find(\".k-upload-button-wrap input\").last().trigger(\"click\");\n                }\n            },\n\n            _readDirectory: function(item) {\n                var deferred = new $.Deferred();\n                var dirReader = item.createReader();\n                var allFolderFiles = [];\n\n                var readEntries = function() {\n                    dirReader.readEntries(function(entries) {\n                        if (!entries.length) {\n                            deferred.resolve(allFolderFiles);\n                        } else {\n                            allFolderFiles = allFolderFiles.concat(entries);\n                            readEntries();\n                        }\n                    }, deferred.reject);\n                };\n\n                readEntries();\n\n                 return deferred.promise();\n            },\n\n            _readFile: function(item) {\n                var that = this;\n                var fullpath = item.fullPath;\n\n                item.file(function(file) {\n                        file.relativePath = fullpath.slice(1);\n                        that.droppedFolderFiles.push(file);\n                        that.droppedFolderCounter --;\n                        if (that.droppedFolderCounter === 0) {\n                            setTimeout(function() {\n                                if (that.droppedFolderCounter === 0) {\n                                    if (that.droppedFolderFiles.length) {\n                                        that._proceedDroppedItems(that.droppedFolderFiles);\n                                        that.droppedFolderFiles = [];\n                                    }\n                                }\n                            },0);\n                        }\n                }, function() {\n                    logToConsole(\"File error.\");\n                });\n            },\n\n            _traverseFileTree: function(item, skipCounter) {\n                var that = this;\n                if (!skipCounter) {\n                    that.droppedFolderCounter--;\n                }\n\n                this._readDirectory(item).then(function(items) {\n                    that.droppedFolderCounter += items.length;\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].isFile) {\n                            that._readFile(items[i]);\n                        } else if (items[i].isDirectory) {\n                            that._traverseFileTree(items[i]);\n                        }\n                    }\n                });\n            },\n\n            _onDrop: function(e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var length;\n\n                stopEvent(e);\n               if (that.options.directoryDrop && dt.items) {\n                    length = dt.items.length;\n                    that.droppedFolderCounter = 0;\n                    that.droppedFolderFiles = [];\n\n                    for (var i = 0; i < length; i++) {\n                        if (dt.items[i].webkitGetAsEntry) {\n                            var entry = dt.items[i].webkitGetAsEntry();\n\n                            if (entry.isDirectory) {\n                                that._traverseFileTree(entry, true);\n                            } else if (entry.isFile) {\n                                that.droppedFolderFiles.push(dt.files[i]);\n                            }\n                        } else {\n                             that._proceedDroppedItems(droppedFiles);\n                        }\n                    }\n               } else {\n                   that._proceedDroppedItems(droppedFiles);\n               }\n            },\n\n            _proceedDroppedItems: function(droppedFiles) {\n                var that = this;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n                  if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-disabled\")) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n\n                    validateFiles(files, that.options.validation);\n\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                    }\n                }\n            },\n\n            _filesContainValidationErrors: function(files) {\n                var hasErrors = false;\n\n                $(files).each(function(index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n\n                return hasErrors;\n            },\n\n            _isAsyncNonBatch: function() {\n                return (this._async && !this.options.async.batch) || false;\n            },\n\n            _renderInitialFiles: function(files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass(\"k-file-success\").data(\"files\", [files[idx]]);\n\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n\n            _prepareTemplateData: function(name, data) {\n                var filesData = data.fileNames,\n                    templateData = {},\n                    totalSize = 0,\n                    idx = 0;\n\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n\n                return templateData;\n            },\n\n            _createProgressbarWapper: function() {\n                return \"<div class='\" + PROGRESSBAR_CLASS + \" k-hidden'></div>\";\n            },\n\n            _createFileIconWrapper: function(fileTypeIcon) {\n                return \"<span class='k-file-icon-wrapper'>\" +\n                    kendo.ui.icon({ icon: fileTypeIcon, iconClass: \"k-file-icon\", size: \"xxlarge\" }) +\n                    \"<span class='k-file-state'></span>\" +\n                    \"</span>\";\n            },\n\n            _progressbarInit: function(wrapper) {\n                var progressbar = wrapper.kendoProgressBar({\n                    animation: false,\n                    showStatus: false\n                }).data(\"kendoProgressBar\");\n                this.progressbars.push(progressbar);\n            },\n\n            _prepareDefaultSingleFileEntryTemplate: function(data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var fileGroup = kendo.getFileGroup(file.extension, true);\n                var errors = file[VALIDATIONERRORS];\n                var isError = errors && errors.length > 0;\n                var invalidClass = isError ? \" k-file-invalid k-file-error\" : \"\";\n                var fileDetails = isError ?\n                        \"<span class='k-file-validation-message' aria-live='polite'>\" + kendo.htmlEncode(that.localization[errors[0]]) + \"</span>\" :\n                        \"<span class='k-file-size'>\" + fileSize + \"</span>\";\n                var template = \"\";\n\n                template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                    this._createProgressbarWapper() +\n                    this._createFileIconWrapper(fileGroup) +\n                    \"<span class='k-file-info'>\" +\n                        \"<span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                        fileDetails +\n                    \"</span>\";\n\n                template += \"<span class='k-upload-actions'></span>\";\n\n                return $(template);\n            },\n\n            _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = \"\";\n                var i, currentFile;\n                var invalidClass = filesHaveValidationErrors ? \" k-file-invalid k-file-error\" : \"\";\n\n                template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                    this._createProgressbarWapper() +\n                    this._createFileIconWrapper(\"copy\");\n\n                files.sort(function(a, b) {\n                    if (a[VALIDATIONERRORS]) { return -1; }\n\n                    if (b[VALIDATIONERRORS]) { return 1; }\n\n                    return 0;\n                });\n\n                template += \"<span class='k-multiple-files-wrapper'>\";\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                    template += \"<span class='k-file-name-size-wrapper'>\";\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                    } else {\n                        template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                    }\n                    template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n                }\n\n                if (filesHaveValidationErrors) {\n                    template += \"<span class='k-file-validation-message' aria-live='polite'>\" + kendo.htmlEncode(that.localization.invalidFiles) + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-summary'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n                }\n\n                template += \"</span><span class='k-upload-actions'></span>\";\n\n                return $(template);\n            },\n\n            _enqueueFile: function(name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $(\".k-upload-files\", that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                var progressbarSelector = template ? PROGRESSBAR_TEMPLATE_SELECTOR : PROGRESSBAR_SELECTOR;\n                var progressbar;\n                var isProgressbar;\n\n                if (fileList.length === 0) {\n                    fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n\n                    that.wrapper.removeClass(\"k-upload-empty\");\n                }\n\n                existingFileEntries = $(\".k-file\", fileList);\n\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n\n                    fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                    fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                    that.angular(\"compile\", function() {\n                        return {\n                            elements: fileEntry,\n                            data: [ templateData ]\n                        };\n                    });\n                }\n\n                progressbar = $(progressbarSelector, fileEntry[0]);\n                isProgressbar = progressbar.length > 0;\n\n                if (isProgressbar) {\n                    that._progressbarInit(progressbar);\n                }\n\n                fileEntry\n                    .attr(kendo.attr(\"uid\"), fileUid)\n                    .appendTo(fileList)\n                    .data(data);\n\n                if (!that._async && isProgressbar) {\n                    progressbar.data(\"kendoProgressBar\").value(100);\n                }\n\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data(\"fileNames\"),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n\n                return fileEntry;\n            },\n\n            _removeFileEntry: function(fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest(\".k-upload-files\");\n                var allFiles, allCompletedFiles, allInvalidFiles;\n\n                fileEntry.remove();\n                allFiles = $(\".k-file\", fileList);\n                allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n\n                if (allCompletedFiles.length === allFiles.length) {\n                    this._hideActionButtons();\n                }\n\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass(\"k-upload-empty\");\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n\n            _fileAction: function(fileElement, actionKey, skipClear) {\n                var iconsNameDictionary = { remove: \"x\", cancel: \"cancel\", retry: \"arrow-rotate-cw-small\", pause: \"pause-sm\" };\n                var firstActionButton;\n                var actionKeyText = kendo.htmlEncode(this.localization[actionKey]);\n\n                if (!iconsNameDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                if (!skipClear) {\n                    this._clearFileAction(fileElement);\n                }\n                if (!this.options.template) {\n                    if (!skipClear) {\n                        fileElement.find(\".k-upload-action\").remove();\n                    }\n                    fileElement.find(\".k-upload-actions\").append(\n                        this._renderAction(iconsNameDictionary[actionKey], actionKeyText, actionKey == \"retry\" ? \"k-i-retry\" : \"\")\n                    );\n                } else {\n                    firstActionButton = fileElement.find(\".k-upload-action\").first();\n                    if (!firstActionButton.find(\".k-icon,.k-svg-icon\").length) {\n                        var firstActionIcon = kendo.ui.icon($((\"<span title=\\\"\" + actionKeyText + \"\\\" aria-label=\\\"\" + actionKeyText + \"\\\"></span>\")), {\n                            icon: iconsNameDictionary[actionKey],\n                            iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                        });\n                        firstActionButton\n                            .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                            .append(firstActionIcon)\n                            .show();\n                    } else if (firstActionButton.next(\".k-upload-action\").length) {\n                        var firstActionIcon$1 = kendo.ui.icon($((\"<span title=\\\"\" + actionKeyText + \"\\\" aria-label=\\\"\" + actionKeyText + \"\\\"></span>\")), {\n                            icon: iconsNameDictionary[actionKey],\n                            iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                        });\n                        firstActionButton.next(\".k-upload-action\")\n                            .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                            .append(firstActionIcon$1)\n                            .show();\n                    }\n                }\n            },\n\n            _fileState: function(fileEntry, stateKey) {\n                var localization = this.localization,\n                    states = {\n                        uploading: {\n                            text: localization.statusUploading\n                        },\n                        uploaded: {\n                            text: localization.statusUploaded\n                        },\n                        failed: {\n                            text: localization.statusFailed\n                        }\n                    },\n                    currentState = states[stateKey];\n\n                if (currentState) {\n                    $(\"span.k-file-state\", fileEntry).text(kendo.htmlEncode(currentState.text));\n                }\n            },\n\n            _renderAction: function(iconName, actionText, iconClass) {\n                if (iconName !== \"\") {\n                    return $(\n                    \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-hidden='true' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                        kendo.ui.icon($((\"<span title=\\\"\" + actionText + \"\\\"></span>\")), { icon: iconName, iconClass: \"k-button-icon\" + (iconClass ? (\" \" + iconClass) : \"\") }) +\n                    \"</button>\"\n                    ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                     .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n                }\n                else {\n                    return $(\n                    \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                        '<span class=\"k-button-text\">' +\n                            actionText +\n                        '</span>' +\n                    \"</button>\"\n                    );\n                }\n            },\n\n            _clearFileAction: function(fileElement) {\n                $(\".k-upload-action\", fileElement).empty().hide();\n            },\n\n            _onFileAction: function(e) {\n                var that = this;\n                if (!that.wrapper.hasClass(\"k-disabled\")) {\n                    var button = $(e.target).closest(\".k-upload-action\");\n                    var icon = button.find(\".k-icon,.k-svg-icon\");\n                    var fileEntry = button.closest(\".k-file\");\n                    var files = fileEntry.data(\"fileNames\");\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n\n                    that._retryClicked = false;\n\n                    if (icon.is(\".k-i-x,.k-svg-i-x\")) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                            that.element.trigger(\"focus\");\n                        }\n                    } else if (icon.is(\".k-i-cancel,.k-svg-i-cancel\")) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                        that.element.trigger(\"focus\");\n                    } else if (icon.is(\".k-i-pause-sm,.k-svg-i-pause-sm\")) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(fileEntry);\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.is(\".k-i-play-sm,.k-svg-i-play-sm\")) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(fileEntry);\n                    } else if (icon.hasClass(\"k-i-retry\")) {\n                        $(\".k-i-exclamation-circle\", fileEntry).remove();\n                        $(PROGRESSBAR_SELECTOR, fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                        that._retryClicked = true;\n                    }\n\n                    fileEntry.addClass(FOCUS_STATE);\n                }\n\n                return false;\n            },\n\n            _onUploadSelected: function() {\n                var that = this;\n                var wrapper = that.wrapper;\n\n                if (!wrapper.hasClass(\"k-disabled\")) {\n                    this._module.onSaveSelected();\n                }\n\n                return false;\n            },\n\n            _onClearSelected: function() {\n                var that = this;\n                var wrapper = that.wrapper;\n\n                var clearEventArgs = { };\n                if (!wrapper.hasClass(\"k-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n\n                return false;\n            },\n\n            _onFileProgress: function(e, percentComplete) {\n                var progressPct;\n                var progressBar = $(PROGRESSBAR_SELECTOR, e.target).data(\"kendoProgressBar\");\n\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n\n                $(PROGRESSBAR_SELECTOR, e.target).removeClass('k-hidden');\n\n                if (!this.options.template) {\n                    progressPct = $(\".k-upload-pct\", e.target);\n\n                    if (progressPct.length === 0) {\n                        $(\".k-upload-actions\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                    }\n\n                    if (percentComplete !== 100) {\n                        $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                    } else {\n                        $(\".k-upload-pct\", e.target).remove();\n                    }\n                }\n\n                if (progressBar) {\n                    progressBar.value(percentComplete);\n                }\n\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data(\"fileNames\"),\n                    percentComplete: percentComplete\n                });\n            },\n\n            _onUploadSuccess: function(e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var files = fileEntry.data(\"fileNames\");\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data(\"fileNames\"),\n                    response: response,\n                    operation: \"upload\",\n                    XMLHttpRequest: xhr\n                });\n\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, \"uploaded\");\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.addClass('k-hidden')\n                            .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + files.length + ' ' + kendo.htmlEncode(that.localization.uploadSuccess) + '</span>');\n                    } else if (fileSize.length > 0) {\n                        fileSize.addClass('k-hidden')\n                            .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + kendo.htmlEncode(that.localization.uploadSuccess) + '</span>');\n                    }\n\n                    that._updateHeaderUploadStatus();\n\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n\n                that._hideUploadProgress(fileEntry);\n\n                that._checkAllComplete();\n            },\n\n            _onUploadError: function(e, xhr) {\n                var that = this;\n                var module = that._module;\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n\n                that._setUploadErrorState(fileEntry);\n\n                that.trigger(ERROR, {\n                    operation: \"upload\",\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n\n                if (!that.options.async.chunkSize) {\n                    that._hideUploadProgress(fileEntry);\n                } else {\n                    if (module._decreasePosition) {\n                        module._decreasePosition(fileUid);\n                    }\n                }\n\n               that._checkAllComplete();\n\n                if (this.options.async.autoRetryAfter) {\n                   this._autoRetryAfter(fileEntry);\n                }\n            },\n            _autoRetryAfter: function(fileEntry) {\n                var that = this;\n                var retries = this._module.retries;\n\n                if (!retries) {\n                    return;\n                }\n\n                if (!retries[fileEntry.data(\"uid\")]) {\n                    retries[fileEntry.data(\"uid\")] = 1;\n                }\n\n                if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                    retries[fileEntry.data(\"uid\")]++;\n                    setTimeout(function() {\n                        that._module.performUpload(fileEntry);\n                    },this.options.async.autoRetryAfter);\n                }\n            },\n            _setUploadErrorState: function(fileEntry) {\n                var that = this,\n                    uploadPercentage,\n                    files = fileEntry.data(\"fileNames\"),\n                    fileInfo = fileEntry.find('.k-file-summary'),\n                    fileSize = fileEntry.find('.k-file-size');\n\n                that._fileState(fileEntry, \"failed\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + files.length + ' ' + kendo.htmlEncode(that.localization.uploadFail) + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\" aria-live=\"polite\">' + kendo.htmlEncode(that.localization.uploadFail) + '</span>');\n                }\n\n                that._updateUploadProgress(fileEntry);\n\n                uploadPercentage = $('.k-upload-pct', fileEntry);\n\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.remove();\n                }\n\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, \"retry\");\n                this._fileAction(fileEntry, REMOVE, true);\n\n                if (that._retryClicked) {\n                    fileEntry.trigger(\"focus\");\n                }\n            },\n\n           _updateUploadProgress: function(fileEntry) {\n                var that = this;\n                var progressbar = $( PROGRESSBAR_SELECTOR, fileEntry);\n                var isProgressbar = progressbar.length > 0;\n\n                if (!that.options.async.chunkSize && isProgressbar) {\n                    progressbar.data(\"kendoProgressBar\").value(100);\n                } else {\n                    var fileUid = fileEntry.data(\"uid\");\n                    if (that._module.metaData) {\n                        var fileMetaData = that._module.metaData[fileUid];\n\n                        if (fileMetaData) {\n                            var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                            that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                        }\n                    }\n                }\n            },\n\n            _hideUploadProgress: function(fileEntry) {\n                $(PROGRESSBAR_SELECTOR, fileEntry)\n                    .delay(PROGRESSHIDEDELAY)\n                    .fadeOut(PROGRESSHIDEDURATION, function() {\n                        if ($(this).data(\"kendoProgressBar\")) {\n                            $(this).data(\"kendoProgressBar\").value(0);\n                        }\n                    });\n            },\n\n            _showActionButtons: function() {\n                var that = this;\n                var actionsWrapper = $(\".k-actions\", that.wrapper);\n                var uploadButton = $(\".k-upload-selected\", that.wrapper);\n                var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n                if (uploadButton.length === 0) {\n                    uploadButton = $(kendo.html.renderButton((\"<button class='k-upload-selected'>\" + (kendo.htmlEncode(this.localization.uploadSelectedFiles)) + \"</button>\"), {\n                            icon: 'upload',\n                            themeColor: 'primary'\n                        }));\n\n                    clearButton = $(kendo.html.renderButton((\"<button class='k-clear-selected'>\" + (kendo.htmlEncode(this.localization.clearSelectedFiles)) + \"</button>\"), {\n                        icon: 'x'\n                    }));\n\n                }\n\n                if (!actionsWrapper.length) {\n                    actionsWrapper = $(\"<div />\")\n                        .addClass(\"k-actions\")\n                        .append(uploadButton, clearButton);\n                }\n\n\n                this.wrapper.append(actionsWrapper);\n            },\n\n            _hideActionButtons: function() {\n                $(\".k-actions\", this.wrapper).remove();\n            },\n\n            _showHeaderUploadStatus: function(isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $(\".k-dropzone\", that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n                headerUploadStatus = '<span class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></span>';\n\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(kendo.htmlEncode(localization.headerStatusUploading));\n                    kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.loading });\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(kendo.htmlEncode(localization.headerStatusUploaded));\n                    kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.warning });\n                }\n\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n\n            _updateHeaderUploadStatus: function() {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error');\n                var currentlyFailed = $('.k-file-error', that.wrapper);\n                var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm,.k-svg-i-play-sm\");\n                var headerUploadStatusIcon;\n\n                if (currentlyPaused.length &&\n                (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                    headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                    if (headerUploadStatusIcon.length) {\n                        kendo.ui.icon(headerUploadStatusIcon, { icon: \"pause-sm\" });\n\n                        headerUploadStatus.html(headerUploadStatusIcon)\n                            .append(kendo.htmlEncode(that.localization.headerStatusPaused));\n                    }\n                } else if (currentlyUploading.length === 0 || currentlyFailed.length > 0) {\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                    if (headerUploadStatusIcon.length) {\n\n                        kendo.ui.icon(headerUploadStatusIcon, { icon: currentlyFailed.length !== 0 ? headerStatusIconName.warning : headerStatusIconName.success });\n\n                        headerUploadStatus.html(headerUploadStatusIcon)\n                            .append(kendo.htmlEncode(that.localization.headerStatusUploaded));\n                    }\n                }\n            },\n\n            _hideHeaderUploadstatus: function() {\n                var that = this,\n                    dropZone = that.options.dropZone;\n\n                $('.k-upload-status-total', this.wrapper).remove();\n\n                if (dropZone === \"\") {\n                    $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n                }\n            },\n\n            _onParentFormSubmit: function() {\n                var upload = this,\n                    element = upload.element;\n\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n\n                if (!element.value) {\n                    var input = $(element);\n\n                    // Prevent submitting an empty input\n                    input.attr(\"disabled\", \"disabled\");\n\n                    window.setTimeout(function() {\n                        // Restore the input so the Upload remains functional\n                        // in case the user cancels the form submit\n                        input.prop(\"disabled\", false);\n                    }, 0);\n                }\n            },\n\n            _onParentFormReset: function() {\n                $(\".k-upload-files\", this.wrapper).remove();\n            },\n\n            _supportsFormData: function() {\n                return typeof(FormData) != \"undefined\";\n            },\n\n            _supportsMultiple: function() {\n                var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n                return !kendo.support.browser.opera &&\n                       !(kendo.support.browser.safari && windows);\n            },\n\n            _supportsDrop: function() {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n                return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n            },\n\n            _userAgent: function() {\n                return navigator.userAgent;\n            },\n\n            _setupDropZone: function() {\n                var that = this;\n\n                var ns = that._ns;\n                var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                    .on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                     })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n                if (!dropZone.find(\".k-dropzone-hint\").length) {\n                    dropZone.append($(\"<span class='k-dropzone-hint'>\" + kendo.htmlEncode(that.localization.dropFilesHere) + \"</span>\"));\n                }\n\n                bindDragEventWrappers(dropZone, ns,\n                    function() {\n                        if (!dropZone.closest('.k-upload').hasClass(\"k-disabled\")) {\n                            dropZone.addClass(HOVER_STATE);\n                        }\n                    },\n                    function() { dropZone.removeClass(HOVER_STATE); });\n\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n\n            _setupCustomDropZone: function() {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n\n                if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                    $(\".k-dropzone\", that.wrapper)\n                        .append($(\"<span class='k-dropzone-hint k-hidden'>\" + kendo.htmlEncode(that.localization.dropFilesHere) + \"</span>\"));\n                } else {\n                    // Dropzone hint in upload should be hidden if customDropZone is used\n                    $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                }\n\n                var ns = that._ns;\n                dropZone.on(\"dragenter\" + ns, stopEvent)\n                        .on(\"dragover\" + ns, function(e) {\n                            if (e.originalEvent) {\n                                e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                            }\n                            e.preventDefault();\n                        })\n                        .on(\"drop\" + ns, that._onDrop.bind(that));\n\n                bindDragEventWrappers(dropZone, ns,\n                    function(e) {\n                        if (!that.wrapper.hasClass(\"k-disabled\")) {\n                            dropZone.removeClass(HOVER_STATE);\n                            dropZone.addClass(HOVER_STATE);\n                            $(e.target).addClass(HOVER_STATE);\n                        }\n                    },\n                    function() {\n                        dropZone.removeClass(HOVER_STATE);\n                    }\n                );\n\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n\n            _bindDocumentDragEventWrappers: function(dropZone) {\n                var that = this;\n                var ns = that._ns;\n\n                bindDragEventWrappers($(document), ns,\n                    function() {\n                        if (!that.wrapper.hasClass(\"k-disabled\")) {\n                            dropZone.addClass(\"k-dropzone-active\");\n                            dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                            dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                        }\n                    },\n                    function() {\n                        dropZone.removeClass(\"k-dropzone-active\");\n                        dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                        if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                            dropZone.closest('.k-upload').addClass('k-upload-empty');\n                        }\n                    }\n                );\n            },\n\n            _toggleDropZone: function() {\n                var that = this,\n                    dropZone = that.options.dropZone;\n\n                if (!that._supportsDrop()) {\n                    return;\n                }\n\n                $(dropZone).off(that._ns);\n                $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n                if (dropZone !== \"\") {\n                    that._setupCustomDropZone();\n                } else {\n                    that._setupDropZone();\n                }\n            },\n\n            _supportsRemove: function() {\n                return !!this.options.async.removeUrl;\n            },\n\n            _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n                var upload = this,\n                    removeField = upload.options.async.removeField || \"fileNames\",\n                    params = $.extend(eventArgs.data, antiForgeryTokens());\n\n                params[removeField] = fileNames;\n\n                jQuery.ajax({\n                      type: this.options.async.removeVerb,\n                      dataType: \"json\",\n                      dataFilter: normalizeJSON,\n                      url: this.options.async.removeUrl,\n                      traditional: true,\n                      data: params,\n                      headers: eventArgs.headers,\n                      success: onSuccess,\n                      error: onError,\n                      xhrFields: {\n                        withCredentials: this.options.async.withCredentials\n                      }\n                });\n            },\n\n            _wrapInput: function(input) {\n                var that = this;\n                var options = that.options;\n                var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n                var selectText = kendo.htmlEncode(that.localization.select);\n                var uploadButton = $(\"<div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button' tabindex='0' role='button'><span class='k-button-text'></span></div>\");\n\n                uploadButton.find('.k-button-text').text(selectText);\n\n                input.wrap(\"<div class='k-upload' role='application'><div class='k-dropzone k-upload-dropzone'><div class='k-upload-button-wrap'></div></div></div>\");\n                uploadButton.prependTo(input.parent());\n\n                if (!options.async.saveUrl) {\n                    input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n                } else {\n                    input.closest(\".k-upload\").addClass(\"k-upload-async\");\n                }\n\n                input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n                if (!hasLabel && !input.attr(\"aria-label\")) {\n                    input.attr(\"aria-label\", selectText);\n                }\n\n                input.attr({\n                    tabindex: -1,\n                    \"aria-hidden\": true\n                });\n\n                return input.closest(\".k-upload\");\n            },\n\n            _checkAllComplete: function() {\n                if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n\n            _inputFiles: function(sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n\n        // Synchronous upload module\n        var syncUploadModule = function(upload) {\n            this.name = \"syncUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element\n                .closest(\"form\")\n                    .attr(\"enctype\", \"multipart/form-data\")\n                    .attr(\"encoding\", \"multipart/form-data\");\n        };\n\n        syncUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n\n                upload._addInput(sourceInput);\n\n                var fileData = { \"fileNames\": files };\n\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n\n                upload._fileAction(file, REMOVE);\n            },\n\n            onRemove: function(e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data(\"relatedInput\");\n\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n\n        var iframeUploadModule = function(upload) {\n            this.name = \"iframeUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n\n        Upload._frameId = 0;\n\n        iframeUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n\n            prepareUpload: function(sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n                var fileEntry, fileData, iframe, form;\n\n                upload._addInput(sourceInput);\n                sourceInput.attr(\"name\", name);\n\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                    this.registerFrame(iframe);\n\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                        .append(activeInput);\n\n                    fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n                } else {\n                    sourceInput.remove();\n\n                    fileData = { \"fileNames\": files };\n                }\n\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n                if (iframe) {\n                    iframe.data({ \"form\": form, \"file\": fileEntry });\n                }\n\n                return fileEntry;\n            },\n\n            performUpload: function(fileEntry) {\n                var e = { files: fileEntry.data(\"fileNames\") };\n                var iframe = fileEntry.data(\"frame\");\n                var upload = this.upload;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideActionButtons();\n                    upload._showHeaderUploadStatus(true);\n\n                    iframe.appendTo(document.body);\n\n                    var form = iframe.data(\"form\")\n                        .attr(\"action\", upload.options.async.saveUrl)\n                        .appendTo(document.body);\n\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find(\"input[name='\" + key + \"']\");\n                        if (dataInput.length === 0) {\n                            dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                                .prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, \"uploading\");\n                    $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n\n                    iframe\n                        .one(\"load\", this.onIframeLoad.bind(this));\n\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data(\"file\"));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n\n            onSaveSelected: function() {\n                var module = this;\n                var upload = module.upload;\n\n                $(\".k-file\", this.element).each(function() {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n\n            onIframeLoad: function(e) {\n                var iframe = $(e.target),\n                    responseText;\n\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = \"Error trying to get server response: \" + ex;\n                }\n\n                this.processResponse(iframe, responseText);\n            },\n\n            processResponse: function(iframe, responseText) {\n                var fileEntry = iframe.data(\"file\"),\n                    module = this,\n                    fakeXHR = {\n                        responseText: responseText\n                    };\n                tryParseJSON(responseText,\n                    function(jsonResult) {\n                        $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                        module.cleanupFrame(iframe);\n                        module.unregisterFrame(iframe);\n                    },\n                    function() {\n                        $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                        module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                    }\n                );\n            },\n\n            onCancel: function(e) {\n                var iframe = $(e.target).data(\"frame\");\n\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data(\"file\"));\n            },\n\n            onRetry: function(e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n\n            onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data(\"frame\");\n\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass(\"k-file-success\")) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n\n            onAbort: function() {\n                var element = this.element,\n                    module = this;\n\n                $.each(this.iframes, function() {\n                    $(\"input\", this.data(\"form\")).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data(\"form\").remove();\n                    this.remove();\n                });\n\n                this.iframes = [];\n            },\n\n            createFrame: function(id) {\n                return $(\n                    \"<iframe\" +\n                    \" name='\" + id + \"'\" +\n                    \" id='\" + id + \"'\" +\n                    \" />\"\n                ).hide();\n            },\n\n            createForm: function(action, target) {\n                return $(\n                    \"<form enctype='multipart/form-data' method='POST'\" +\n                    \" action='\" + action + \"'\" +\n                    \" target='\" + target + \"'\" +\n                    \"/>\");\n            },\n\n            stopFrameSubmit: function(frame) {\n                if (typeof(frame.stop) != \"undefined\") {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand(\"Stop\");\n                }\n            },\n\n            registerFrame: function(frame) {\n                this.iframes.push(frame);\n            },\n\n            unregisterFrame: function(frame) {\n                this.iframes = $.grep(this.iframes, function(value) {\n                    return value.attr(\"name\") != frame.attr(\"name\");\n                });\n            },\n\n            cleanupFrame: function(frame) {\n                var form = frame.data(\"form\");\n\n                frame.data(\"file\").data(\"frame\", null);\n\n                setTimeout(function() {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n\n        // FormData upload module\n        var formDataUploadModule = function(upload) {\n            this.name = \"formDataUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.position = {};\n            this.metaData = {};\n            this.cancelled = {};\n            this.resume = {};\n            this.paused = {};\n            this.retries = {};\n        };\n\n        formDataUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                var prev;\n\n                $.each(fileEntries, function(index) {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            if (upload.options.async.chunkSize) {\n                                module.prepareChunk(this);\n                                prev = this.prev();\n\n                                if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                                 (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                    module.performUpload(this);\n                                }\n                            } else {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n\n                        if (!hasValidationErrors) {\n                            upload._showActionButtons();\n                            this.addClass(\"k-toupload\");\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n\n            prepareUpload: function(sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n\n                if (sourceElement.is(\"input\")) {\n                    $.each(fileEntries, function() {\n                        $(this).data(\"relatedInput\", sourceElement);\n                    });\n                    sourceElement.data(\"relatedFileEntries\", fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n\n                return fileEntries;\n            },\n\n            enqueueFiles: function(files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                    if (upload.directory || upload.options.directoryDrop) {\n                        $(files).each(function() {\n                            if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                                this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                            }\n                        });\n                    }\n\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data(\"files\", files);\n\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        if (upload.directory || upload.options.directoryDrop) {\n                            if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                                currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                            }\n                        }\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data(\"files\", [currentFile]);\n\n                        fileEntries.push(fileEntry);\n                    }\n                }\n\n                return fileEntries;\n            },\n\n            performUpload: function(fileEntry) {\n                var upload = this.upload,\n                    formData = this.createFormData(),\n                    xhr = this.createXHR(),\n                    e = {\n                        files: fileEntry.data(\"fileNames\"),\n                        XMLHttpRequest: xhr\n                    },\n                    files;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                if (!upload.trigger(UPLOAD, e)) {\n                    if (fileEntry.find(\".k-i-cancel,.k-svg-i-cancel\").length === 0) {\n                        if (upload.options.async.chunkSize) {\n                            upload._fileAction(fileEntry, PAUSE);\n                        }\n                        upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                    }\n\n                    if (!upload.wrapper.find(\".k-toupload\").length) {\n                        upload._hideActionButtons();\n                    }\n\n                    upload._showHeaderUploadStatus(true);\n\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({ }, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n\n                        files = fileEntry.data(\"files\");\n                        if (files) {\n                            this.populateFormData(formData, files);\n                        }\n                    }\n\n                    upload._fileState(fileEntry, \"uploading\");\n                    $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n\n                    if (upload.options.async.useArrayBuffer && window.FileReader) {\n                        this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    } else {\n                        this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    }\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n\n            _readFile: function(saveUrl, formData, fileEntry, xhr) {\n                var that = this;\n                var upload = that.upload;\n                var file = fileEntry.data(\"files\")[0];\n\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    try {\n                        if (!that.fileArrayBuffer) {\n                            that.fileArrayBuffer = e.target.result;\n                        } else {\n                            that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                        }\n                    } catch (err) {\n                        upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                        return;\n                    }\n\n                    if (that.position[file.uid] > file.size) {\n                        that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                        that.fileArrayBuffer = null;\n                    } else {\n                        that._readFile(saveUrl, formData, fileEntry, xhr);\n                    }\n                };\n                reader.onerror = function() {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                };\n                reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n            },\n\n            _appendBuffer: function(buffer1, buffer2) {\n                var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n                tmp.set(new Uint8Array(buffer1), 0);\n                tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n                return tmp.buffer;\n            },\n\n            onSaveSelected: function() {\n                var module = this;\n                var upload = module.upload;\n\n                $(\".k-toupload\", this.element).filter(function() {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                    return !started && !hasValidationErrors;\n                }).each(function(index) {\n                    var fileEntry = $(this);\n                    var prevEntry = fileEntry.prev();\n\n                    fileEntry.removeClass(\"k-toupload\");\n                    if (upload.options.async.chunkSize) {\n                        module.prepareChunk(fileEntry);\n\n                        if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                            (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error:not(k-file-invalid)\"))) {\n                            module.performUpload(fileEntry);\n                        }\n                    } else {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n\n            onCancel: function(e) {\n                var fileEntry = getFileEntry(e);\n\n                if (this.upload.options.async.chunkSize) {\n                    this.cancelled[fileEntry.data(\"uid\")] = true;\n                }\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n\n            onPause: function(e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileUid] = async.maxAutoRetries + 1;\n                    this.paused[fileUid] = true;\n                    this.resume[fileUid] = false;\n                }\n            },\n\n            onResume: function(e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n\n                if (this.upload.options.async.chunkSize) {\n                    delete this.paused[fileUid];\n                    this.resume[fileUid] = true;\n                    this.retries[fileEntry.data(\"uid\")] = 1;\n                    this._increaseChunkIndex(fileUid);\n                    this.performUpload(fileEntry);\n                }\n            },\n\n            onRetry: function(e) {\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                    delete this.paused[fileEntry.data(\"uid\")];\n                }\n\n                this.performUpload(fileEntry);\n            },\n\n            onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                }\n\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n\n            createXHR: function() {\n                return new XMLHttpRequest();\n            },\n\n            postFormData: function(url, data, fileEntry, xhr) {\n                var module = this;\n\n                fileEntry.data(\"request\", xhr);\n\n                xhr.addEventListener(\"load\", function(e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n\n                xhr.addEventListener(ERROR, function(e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n\n                xhr.upload.addEventListener(\"progress\", function(e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n\n                xhr.open(\"POST\", url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader(\"Accept\", accept);\n                }\n\n                xhr.send(data);\n            },\n\n            createFormData: function() {\n                return new FormData();\n            },\n\n            populateFormData: function(data, files) {\n                var chunk;\n                var i;\n                var length = files.length;\n                var uid;\n                var upload = this.upload;\n\n                if (upload.options.async.chunkSize) {\n                     uid = files[0].uid;\n                     chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        chunk\n                    );\n\n                    var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                    data.append(\"metadata\", serializedMetaData);\n                } else {\n                     for (i = 0; i < length; i++) {\n                        data.append(\n                            upload.options.async.saveField || upload.name,\n                            files[i].rawFile\n                        );\n                     }\n                }\n\n                return data;\n            },\n\n            onRequestSuccess: function(e, fileEntry) {\n                var xhr = e.target,\n                    module = this;\n\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n\n                function parseSuccess(jsonResult) {\n                    var batch = module.upload.options.async.batch;\n                    var chunkSize = module.upload.options.async.chunkSize;\n                    var concurrent = module.upload.options.async.concurrent;\n                    var fileUid = jsonResult.fileUid;\n\n                    if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                        return;\n                    }\n\n                    delete module.retries[fileUid];\n\n                    if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                        module._increaseChunkIndex(fileUid);\n                        module.performUpload(fileEntry);\n                    } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                            module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                            module._resetChunkIndex(fileUid);\n                            module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                            module.performUpload(fileEntry.next());\n                    } else {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }\n                }\n\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText,\n                        parseSuccess,\n                        raiseError\n                    );\n                } else {\n                    raiseError();\n                }\n            },\n\n            onRequestError: function(e, fileEntry) {\n                var xhr = e.target;\n\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n\n            cleanupFileEntry: function(fileEntry) {\n                var relatedInput = fileEntry.data(\"relatedInput\"),\n                    uploadComplete = true;\n\n                if (relatedInput) {\n                    $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                        // Exclude removed file entries and self\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                        }\n                    });\n\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n\n            removeFileEntry: function(fileEntry) {\n                var chunkSize = this.upload.options.async.chunkSize;\n                var concurrent = this.upload.options.async.concurrent;\n                var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n                this.cleanupFileEntry(fileEntry);\n                if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                     if (fileEntry.next().length) {\n                         this.performUpload(fileEntry.next());\n                     }\n                }\n                this.upload._removeFileEntry(fileEntry);\n            },\n\n            onRequestProgress: function(e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                var fileUid = fileEntry.data(\"uid\");\n                var fileMetaData;\n\n                if (this.upload.options.async.chunkSize) {\n                    fileMetaData = this.metaData[fileUid];\n                    percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n                }\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n\n            stopUploadRequest: function(fileEntry) {\n                if (fileEntry.data(\"request\")) {\n                    fileEntry.data(\"request\").abort();\n                }\n            },\n\n            prepareChunk: function(fileEntry) {\n                var file = fileEntry.data(\"files\")[0];\n                var rawFile = file.rawFile;\n                var uid = file.uid;\n                var chunkSize = this.upload.options.async.chunkSize;\n                this.position[uid] = 0;\n\n                this.metaData[uid] = {\n                    chunkIndex: 0,\n                    contentType: rawFile.type,\n                    fileName: rawFile.name,\n                    relativePath: file.name,\n                    totalFileSize: rawFile.size,\n                    totalChunks: Math.ceil(rawFile.size / chunkSize),\n                    uploadUid: uid\n                };\n            },\n\n            _decreaseChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex--;\n            },\n\n            _increaseChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex++;\n            },\n\n            _resetChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex = 0;\n            },\n\n            _decreasePosition: function(uid) {\n                this.position[uid] -= this.upload.options.async.chunkSize;\n            },\n\n            _getCurrentChunk: function(file, uid) {\n                var oldPosition = this.position[uid];\n                var methodToInvoke;\n                var async = this.upload.options.async;\n                var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n                if (!this.position[uid]) {\n                    this.position[uid] = 0;\n                }\n                this.position[uid] += chunkSize;\n\n                if (!!(methodToInvoke = this._getChunker(file))) {\n                    return file[methodToInvoke](oldPosition, this.position[uid]);\n                } else {\n                    return file;\n                }\n            },\n\n            _getChunker: function(file) {\n                if (file.slice) {\n                    return \"slice\";\n                } else if (file.mozSlice) {\n                    return \"mozSlice\";\n                } else if (file.webkitSlice) {\n                        return \"webkitSlice\";\n                } else {\n                    return null;\n                }\n            }\n        };\n\n        // Helper functions\n        function getFileName(input) {\n            return $.map(inputFiles(input), function(file) {\n                return file.name;\n            }).join(\", \");\n        }\n\n        function inputFiles($input) {\n            var input = $input[0];\n\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                    name: stripPath(input.value),\n                    extension: getFileExtension(input.value),\n                    size: null\n                }];\n            }\n        }\n\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function(file) {\n                return getFileInfo(file);\n            });\n        }\n\n        function getFileInfo(rawFile) {\n            // Older Firefox versions (before 3.6) use fileName and fileSize\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : \"\";\n        }\n\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf(\"\\\\\");\n            return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n        }\n\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n\n            return $.map(files, function(file) {\n                file.uid = unique ? kendo.guid() : uid;\n\n                return file;\n            });\n        }\n\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function(ext) {\n                var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n                return parsedExt.toLowerCase();\n            });\n\n            return allowedExtensions;\n        }\n\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n\n            if (typeof files[0].size == \"number\") {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return \"\";\n            }\n\n            totalSize /= 1024;\n\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + \" KB\";\n            } else {\n                return (totalSize / 1024).toFixed(2) + \" MB\";\n            }\n        }\n\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n        }\n\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                return;\n            }\n\n            var files = fileEntry.data(\"fileNames\");\n            var fileNames = $.map(files, function(file) { return file.name; });\n\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n\n                return;\n            }\n\n            upload._submitRemove(fileNames, eventArgs,\n                function onSuccess(data, textStatus, xhr) {\n                    var prevented = upload.trigger(SUCCESS, {\n                        operation: \"remove\",\n                        files: files,\n                        response: data,\n                        XMLHttpRequest: xhr\n                    });\n\n                    if (!prevented) {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                },\n\n                function onError(xhr) {\n                    if (shouldRemoveFileEntry(upload)) {\n                        upload._removeFileEntry(fileEntry);\n                    }\n\n                    upload.trigger(ERROR, {\n                        operation: \"remove\",\n                        files: files,\n                        XMLHttpRequest: xhr\n                    });\n\n                    logToConsole(\"Server response: \" + xhr.responseText);\n                }\n            );\n        }\n\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false,\n                json = \"\";\n\n            try {\n                json = JSON.parse(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n\n            if (success) {\n                onSuccess(json);\n            }\n        }\n\n        function normalizeJSON(input) {\n            if (typeof input === \"undefined\" || input === \"\") {\n                input = \"{}\";\n            }\n\n            return input;\n        }\n\n        function stopEvent(e) {\n            if (e.originalEvent) {\n                e.originalEvent.dataTransfer.dropEffect = \"copy\";\n            }\n            e.stopPropagation(); e.preventDefault();\n        }\n\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n\n            element\n                .on(\"dragenter\" + namespace, function(e) {\n                    onDragEnter(e);\n                    lastDrag = new Date();\n\n                    if (!hideInterval) {\n                        hideInterval = setInterval(function() {\n                            var sinceLastDrag = new Date() - lastDrag;\n                            if (sinceLastDrag > 100) {\n                                onDragLeave();\n\n                                clearInterval(hideInterval);\n                                hideInterval = null;\n                            }\n                        }, 100);\n                    }\n                })\n                .on(\"dragover\" + namespace, function() {\n                    lastDrag = new Date();\n                });\n        }\n\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error:not(.k-file-invalid)\");\n        }\n\n        function getFileEntry(e) {\n            return $(e.target).closest(\".k-file\");\n        }\n\n        kendo.ui.plugin(Upload);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}